[
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.splitActiveTab",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },

  {
    "key": "ctrl+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },

  {
    "key": "ctrl+.",
    "command": "-workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },

  {
    "key": "ctrl+.",
    "command": "-acceptSelectedCodeAction",
    "when": "codeActionMenuVisible"
  },

  {
    "key": "ctrl+.",
    "command": "-editor.changePasteType",
    "when": "pasteWidgetVisible"
  },

  {
    "key": "ctrl+.",
    "command": "-problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+.",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "-editor.changeDropType",
    "when": "dropWidgetVisible"
  },

  {
    "key": "alt+a",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "ctrl+shift+0",
    "command": "-extension.resetState"
  },
  {
    "key": "shift+insert",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+insert",
    "command": "markdown.extension.editing.paste",
    "when": "editorHasSelection && editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+insert",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "key": "ctrl+insert",
    "command": "extension.doNotCopyEmpty",
    "when": "editorTextFocus && !editorHasSelection && !keybindingFocus && !problemFocus && !terminalFocus"
  },
  {
    "key": "ctrl+insert",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "ctrl+insert",
    "command": "keybindings.editor.copyKeybindingEntry",
    "when": "inKeybindings && keybindingFocus && !whenFocus"
  },
  {
    "key": "ctrl+insert",
    "command": "problems.action.copy",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "ctrl+insert",
    "command": "remote.tunnel.copyAddressInline",
    "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
  },
  {
    "key": "ctrl+insert",
    "command": "search.action.copyMatch",
    "when": "fileMatchOrMatchFocus"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.branches.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.branches/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.commits.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.commits/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.contributors.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.contributors/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.drafts.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.drafts/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.fileHistory.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.lineHistory.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.remotes.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.remotes/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.repositories.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.searchAndCompare.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.searchAndCompare\\b/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.stashes.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.stashes/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.tags.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.tags/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.workspaces.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.workspaces/"
  },
  {
    "key": "ctrl+insert",
    "command": "gitlens.views.worktrees.copy",
    "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.worktrees/"
  },

  {
    "key": "ctrl+l",
    "command": "macros.ninjaReload"
  },
  {
    "key": "ctrl+f",
    "command": "macros.focusFind",
    "when": "panelFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+t",
    "command": "-extension.toggle_hover"
  },
  {
    "key": "ctrl+t",
    "command": "fileutils.newFileAtRoot"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+t",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.showCommands",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "right",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "f2",
    "command": "editor.emmet.action.updateTag",
    "when": "editorTextFocus && editorLangId == 'njk'"
  },

  {
    "key": "alt+l",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },
  {
    "key": "alt+l",
    "command": "editor.changeDropType",
    "when": "dropWidgetVisible"
  },
  {
    "key": "alt+l",
    "command": "editor.changePasteType",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "alt+l",
    "command": "problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+r",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.showTreeHover",
    "when": "customTreeView && listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-workbench.action.showTreeHover",
    "when": "customTreeView && listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "f8",
    "command": "-quokka.playTraceForwardToBreakpoint",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+shift+r",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "alt+r",
    "command": "code-runner.run"
  },
  {
    "key": "alt+c",
    "command": "-toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "alt+c",
    "command": "-gitlens.showQuickCommitFileDetails",
    "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+c",
    "command": "-markdown.extension.checkTaskList",
    "when": "editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "alt+c",
    "command": "-toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "alt+c",
    "command": "-toggleSearchCaseSensitive",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "alt+b",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "alt+b",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "alt+x",
    "command": "workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "alt+r",
    "command": "-toggleSearchEditorRegex",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+r",
    "command": "-workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "alt+r",
    "command": "-toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "alt+r",
    "command": "-toggleSearchRegex",
    "when": "searchViewletFocus"
  },
  {
    "key": "ctrl+shift+5",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+m",
    "command": "-extension.toggleCase",
    "when": "editorHasSelection"
  },
  {
    "key": "alt+c",
    "command": "macros.toggleCase",
    "when": "editorFocus"
  }
]
